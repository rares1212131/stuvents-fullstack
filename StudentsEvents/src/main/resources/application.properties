# This file is for public GitHub repository. Secrets are injected via environment variables.

spring.application.name=StudentsEvents
server.port=8080

# Database configuration will be provided by environment variables on Render
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.ddl-auto=update

# Admin user details (safe to commit)
app.admin.email=admin@studentevents.com
app.admin.password=AdminPassword123!

# JWT configuration (secret provided by environment variable)
jwt.secret=${JWT_SECRET}
jwt.expirationMs=86400000

# Email configuration (password provided by environment variable)
spring.mail.host=smtp-relay.brevo.com
spring.mail.port=587
spring.mail.username=977700001@smtp-brevo.com
spring.mail.password=${SPRING_MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Google OAuth configuration (secrets provided by environment variables)
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid,email,profile

# Google Maps configuration (secret provided by environment variable)
google.maps.api.key=${GOOGLE_MAPS_API_KEY}


# ===============================================
# ??? ADD THE FOLLOWING NEW LINES ???
# ===============================================

# This is the toggle to switch between SMTP and the Brevo HTTP API.
# It defaults to 'false' (using SMTP) unless overridden by an environment variable.
use.brevo.api=${USE_BREVO_API:false}

# These are the default sender details for the Brevo HTTP API.
brevo.sender.email=rrspld@gmail.com
brevo.sender.name=STUvents

app.frontend.url=${FRONTEND_URL:http://localhost:5173}


cloudinary.cloud_name=${CLOUDINARY_CLOUD_NAME}
cloudinary.api_key=${CLOUDINARY_API_KEY}
cloudinary.api_secret=${CLOUDINARY_API_SECRET}